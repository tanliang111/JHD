/*
 * @(#)PreferencesDialog.java  1.0  June 11, 2007
 *
 * Copyright (c) 2007 Werner Randelshofer
 * Staldenmattweg 2, CH-6405 Immensee, Switzerland
 * All rights reserved.
 *
 * This software is the confidential and proprietary information of
 * Werner Randelshofer. ("Confidential Information").  You shall not
 * disclose such Confidential Information and shall use it only in
 * accordance with the terms of the license agreement you entered into
 * with Werner Randelshofer.
 */

package org.jhotdraw.samples.teddyapplication;

import application.*;
import ch.randelshofer.quaqua.util.Fonts;
import java.util.prefs.*;
import org.jhotdraw.util.prefs.PreferencesUtil;


/**
 * Preferences Dialog.
 *
 * @author  Werner Randelshofer
 * @version 1.0 2007-06-11 Created.
 */
public class PreferencesDialog extends javax.swing.JDialog {
    private ResourceMap labels;
    
    /** Creates new form PreferencesDialog */
    public PreferencesDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        
        labels = ApplicationContext.getInstance().getResourceMap(TeddyView.class);
        initComponents();
        
        Preferences prefs = Preferences.userNodeForPackage(getClass());
        PreferencesUtil.installFramePrefsHandler(prefs, "Preferences.Dialog", this);
        
        String ui = prefs.get("UserInterface","SDI");
        if (ui.equals("SDI")) {
            sdiRadio.setSelected(true);
        } else if (ui.equals("MDI")) {
            mdiRadio.setSelected(true);
        } else {
            osxRadio.setSelected(true);
        }
        
        uiLabel.setFont(Fonts.getEmphasizedDialogFont());
    }
    /** Creates new form FindDialog */
    public PreferencesDialog() {
        this(null, false);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        uiGroup = new javax.swing.ButtonGroup();
        uiLabel = new javax.swing.JLabel();
        sdiRadio = new javax.swing.JRadioButton();
        mdiRadio = new javax.swing.JRadioButton();
        osxRadio = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        uiLabel.setText(labels.getString("Preferences.UserInterface.text"));

        uiGroup.add(sdiRadio);
        sdiRadio.setText(labels.getString("Preferences.SingleDocumentInterface.text"));
        sdiRadio.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        sdiRadio.setMargin(new java.awt.Insets(0, 0, 0, 0));
        sdiRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uiRadioPerformed(evt);
            }
        });

        uiGroup.add(mdiRadio);
        mdiRadio.setText(labels.getString("Preferences.MultipleDocumentInterface.text"));
        mdiRadio.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        mdiRadio.setMargin(new java.awt.Insets(0, 0, 0, 0));
        mdiRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uiRadioPerformed(evt);
            }
        });

        uiGroup.add(osxRadio);
        osxRadio.setText(labels.getString("Preferences.MacOSX.text"));
        osxRadio.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        osxRadio.setEnabled(false);
        osxRadio.setMargin(new java.awt.Insets(0, 0, 0, 0));
        osxRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uiRadioPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(osxRadio)
                    .add(mdiRadio)
                    .add(uiLabel)
                    .add(sdiRadio))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(uiLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(sdiRadio)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(mdiRadio)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(osxRadio)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void uiRadioPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uiRadioPerformed
        Preferences prefs = Preferences.userNodeForPackage(getClass());
        if (sdiRadio.isSelected()) {
            prefs.put("UserInterface","SDI");
        } else if (mdiRadio.isSelected()) {
            prefs.put("UserInterface","MDI");
        } else {
            prefs.put("UserInterface","OSX");
        }
    }//GEN-LAST:event_uiRadioPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PreferencesDialog(new javax.swing.JFrame(), true).setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton mdiRadio;
    private javax.swing.JRadioButton osxRadio;
    private javax.swing.JRadioButton sdiRadio;
    private javax.swing.ButtonGroup uiGroup;
    private javax.swing.JLabel uiLabel;
    // End of variables declaration//GEN-END:variables
    
}
